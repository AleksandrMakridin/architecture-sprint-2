name: mongo-sharding
services:

  # api
  pymongo_api:
    image: kazhem/pymongo_api:1.0.0
    container_name: pymongo_api
    depends_on:
      - mongos_router
    restart: always    
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router"
      MONGODB_DATABASE_NAME: "somedb"

  # configSrv
  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - 27017:27017
    volumes:
      - config-data:/data/db
    command: 
      [
        "--configsvr",  //запуск в режиме конфигурации
        "--replSet",
        "config_server",
        "--bind_ip_all"
      ] 
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27017"]
      interval: 5s
      start_period: 10s

  # router
  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    depends_on: ["configSrv", "shard1", "shard2"]
    restart: always
    ports:
      - "27020:27020"
    volumes:
      - router-data:/data/db  
    command: 
       [
        "mongos", //обычная mongo в режиме роутера
        "--configdb", 
        "config_server/configSrv:27017", //передача данных сервера конфигурации
        "--bind_ip_all",
        ]
    healthcheck:
     test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27020"]
     interval: 5s
     start_period: 10s

  # shard1
  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - 27018:27018
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr", //запуск в режиме шардинга
        "--replSet",
        "shard1", //название реплики
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27018"]
      interval: 5s
      start_period: 10s
      
  # shard2
  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - 27019:27019
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr", //запуск в режиме шардинга
        "--replSet",
        "shard2", //название реплик
        "--bind_ip_all" // обратите внимание - она отличается от реплики 1-го шарда
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')", "--port", "27019"]
      interval: 5s
      start_period: 10s
      

volumes:
  config-data:
  router-data:
  shard1-data:
  shard2-data:
